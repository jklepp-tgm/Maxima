/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 14.12.0 ] */

/* [wxMaxima: title   start ]
Übungen zu Pf06
  Jakob Klepp  
  2015-04-21   
   [wxMaxima: title   end   ] */

/* [wxMaxima: section start ]

   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Gegeben sie folgende Differentialgleichung mit
Anfangsbedingung:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
dgl: 'diff(y, x) - 2*y = 3*x^3 - 4*x;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
nb: [-2, 3.38];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
Erstelle zunächst eine Grafik, in der Du (ohne vorheriges Lösen
der Differentialgleichung) das Richtungsfeld der gegeben
Differentialgleichung einträgst.

Erkläre an diesem Beispiel den Begriff Richtungsfeld.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
load(drawdf);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(dgl, 'diff(y, x));
fI: rhs(%[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxdrawdf(fI);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Eine unbestimmte Differentialgleichung hat unendlich viele
Lösungsfunktionen. Diese werden im Richtungsfeld durch ein
Feld an Steigungspfeil angedeutet.

Durch eine Nebenbedingung lässt sich aus den unendlich vielen
LÖsungsfunktion eine bestimmte auswählen.
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
Löse die nebenstehende Differentialgleichung symbolisch mittels
Ansatzes einer Polynomfunktion und ermittle die Gleichung jener
Lösungskurve, die durch den Punkt P geht.
Dokumentiere Deinen Lösungsweg ausführlich.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Art              s(x)                                           ya
================ ============================================== ==============================================
Polynom          A[n]*x^(n) + A[n-1]*x^(n-1) + ... + A[0]*x^(0) a[n]*x^(n) + a[n-1]*x^(n-1) + ... + a[0]*x^(0)

                 A*sin(w*x)
Trigonometrisch  B*cos(w*x)                                     a*sin(w*x) + b*cos(w*x)      //w=kleines Omega
                 A*sin(w*x) + B*cos(w*x)

                                                                a * e^(b*x)     //wenn b != -p
Exponential      A*e^(b*x)                                      a*x*e^(b*x)     //wenn b ==  p
                                                                                // p in DGL 1. Ordnung:
                                                                                // y' + py = s(x)
                                                                                //     -^-
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
dgl;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
s_x: A_3 * x^3 + A_2 * x^2 + A_1 * x^1 + A_0 * x^0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ya: a_3 * x^3 + a_2 * x^2 + a_1 * x^1 + a_0 * x^0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
yaI: diff(ya, x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Ansatz in inhomogene DGL einsetzen
um die unbestimmten Koeffizienten zu berechnen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
unKoAnsatz: subst(['diff(y, x) = yaI, y=ya], dgl);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
unKoAnsatz: expand(unKoAnsatz);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
unKoAnsatz: ratsimp(unKoAnsatz);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Aufstellen des Gleichungssystem
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
coeffs: solve([

coeff(unKoAnsatz, x, 0),
coeff(unKoAnsatz, x, 1),
coeff(unKoAnsatz, x, 2),
coeff(unKoAnsatz, x, 3)

])[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Durch einsetzen der berechneten Koeffizienten in den
Lösungsansatz erhält man die partikuläre Lösung der DGL.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
yP: subst(coeffs, ya);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxdraw2d(
explicit(yP, x, -10, 10),
color=red,
point_type=7,
points([nb])
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Beweis dass die Richtige Lösungsgleichung gefunden wurde.
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* [wxMaxima: section start ]

   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
