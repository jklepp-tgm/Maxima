/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 14.09.0 ] */

/* [wxMaxima: title   start ]
1. Schularbeit
2014-12-23
Jakob Klepp
   [wxMaxima: title   end   ] */

/* [wxMaxima: section start ]

   [wxMaxima: section end   ] */

/* [wxMaxima: section start ]

   [wxMaxima: section end   ] */

/* [wxMaxima: section start ]

   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
3) 
  jedes 250. Stück Ausschuss
  Tagesproduktion 2000 Stück

a) kein Ausschuss
b) genau ein
c) genau drei
d) mindestens drei Stück Ausschuss
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Binomialverteilung(n,p):=buildq(
[n,p],
lambda([x],
    binomial(n, x) * p^x * (1-p) ^ (n-x)
));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
a) kein Ausschuss
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Binomialverteilung(2000, 1/250)(0), float;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Wahrscheindlichkeit liegt bei etwa 0.033%
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
b) genau ein
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Binomialverteilung(2000, 1/250)(1), float;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Wahrscheindlichkeit liegt bei etwa 0.27%
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
c) genau drei
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Binomialverteilung(2000, 1/250)(3), float;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Wahrscheindlichkeit liegt bei etwa 2.85%
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
d) mindestens drei Stück Ausschuss
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lreduce("+", makelist(Binomialverteilung(2000, 1/250)(i), i, 3, 200)), float;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Wahrscheindlichkeit liegt bei etwa 98.64%
   [wxMaxima: comment end   ] */

/* [wxMaxima: section start ]

   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
norm(x, µ, sigma):=1/(sigma*sqrt(2*%pi)) * %e^-((x-µ)^2/(2*sigma^2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
 	stnv_table: [
/* z 0.00 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.8 0.09 */
/*****************************************************************************************/
/* 0.00 */ 0.5000, 0.5040, 0.5080, 0.5120, 0.5160, 0.5199, 0.5239, 0.5279, 0.5319, 0.5359,
/* 0.10 */ 0.5398, 0.5438, 0.5478, 0.5517, 0.5557, 0.5596, 0.5636, 0.5675, 0.5714, 0.5753,
/* 0.20 */ 0.5793, 0.5832, 0.5371, 0.5911, 0.5948, 0.5987, 0.6026, 0.6064, 0.6103, 0.6141,
/* 0.30 */ 0.6179, 0.6217, 0.6255, 0.6293, 0.6331, 0.6368, 0.6406, 0.6443, 0.6480, 0.6517,
/* 0.40 */ 0.6554, 0.6591, 0.6628, 0.6664, 0.6700, 0.6736, 0.6772, 0.6808, 0.6844, 0.6879,
/* 0.50 */ 0.6915, 0.6950, 0.6985, 0.7019, 0.7054, 0.7088, 0.7123, 0.7157, 0.7190, 0.7224,
/* 0.60 */ 0.7257, 0.7291, 0.7324, 0.7357, 0.7389, 0.7422, 0.7454, 0.7486, 0.7517, 0.7549,
/* 0.70 */ 0.7580, 0.7611, 0.7642, 0.7673, 0.7704, 0.7734, 0.7764, 0.7794, 0.7823, 0.7852,
/* 0.80 */ 0.7881, 0.7910, 0.7939, 0.7967, 0.7995, 0.8023, 0.8051, 0.8078, 0.8106, 0.8133,
/* 0.90 */ 0.8159, 0.8186, 0.8212, 0.8238, 0.8264, 0.8289, 0.8315, 0.8340, 0.8365, 0.8389,
/* */
/* 1.00 */ 0.8413, 0.8438, 0.8461, 0.8485, 0.8508, 0.8531, 0.8554, 0.8577, 0.8599, 0.8621,
/* 1.10 */ 0.8643, 0.8665, 0.8686, 0.8708, 0.8729, 0.8749, 0.8770, 0.8790, 0.8810, 0.8830,
/* 1 20 */ 0.8849, 0.8869, 0.8888, 0.8907, 0.8925, 0.8944, 0.8962, 0.8980, 0.8997, 0.9015,
/* 1.30 */ 0.9032, 0.9049, 0.9066, 0.9082, 0.9099, 0.9115, 0.9131, 0.9147, 0.9162, 0.9177,
/* 1.40 */ 0.9192, 0.9207, 0.9222, 0.9236, 0.9251, 0.9265, 0.9279, 0.9292, 0.9306, 0.9319,
/* 1.50 */ 0.9332, 0.9345, 0.9357, 0.9370, 0.9382, 0.9394, 0.9406, 0.9418, 0.9429, 0.9441,
/* 1.60 */ 0.9452, 0.9463, 0.9474, 0.9484, 0.9495, 0.9505, 0.9515, 0.9525, 0.9535, 0.9545,
/* 1.70 */ 0.9554, 0.9564, 0.9573, 0.9582, 0.9591, 0.9599, 0.9608, 0.9616, 0.9525, 0.9633,
/* 1.80 */ 0.9641, 0.9649, 0.9656, 0.9664, 0.9671, 0.9678, 0.9686, 0.9693, 0.9699, 0.9706,
/* 1.90 */ 0.9713, 0.0719, 0.9726, 0.9732, 0.9738, 0.9744, 0.9750, 0.9756, 0.9761, 0.9767,
/* */
/* 2.00 */ 0.9772, 0.9778, 0.9783, 0.9788, 0.9793, 0.9798, 0.9803, 0.9808, 0.9812, 0.9817,
/* 2.10 */ 0.9821, 0.9826, 0.9830, 0.9834, 0.9838, 0.9842, 0.9846, 0.9850, 0.9854, 0.9857,
/* 2.20 */ 0.9861, 0.9864, 0.9868, 0.9871, 0.9875, 0.9878, 0.9881, 0.9884, 0.9887, 0.9890,
/* 2.30 */ 0.9893, 0.9896, 0.9898, 0.9901, 0.9904, 0.9906, 0.9909, 0.9911, 0.9913, 0.9916,
/* 2.40 */ 0.9918, 0.9920, 0.9922, 0.9925, 0.9927, 0.9929, 0.9931, 0.9932, 0.9934, 0.9936,
/* 2 50 */ 0.9938, 0.9940, 0.9941, 0.9943, 0.9945, 0.9946, 0.9948, 0.9949, 0.9951, 0.9952,
/* 2.60 */ 0.9953, 0.9955, 0.9956, 0.9957, 0.9959, 0.9960, 0.9961, 0.9962, 0.9963, 0.9964,
/* 2.70 */ 0.9965, 0.9966, 0.9967, 0.9968, 0.9969, 0.9970, 0.9971, 0.9972, 0.9973, 0.9974,
/* 2.80 */ 0.9974, 0.9975, 0.9976, 0.9977, 0.9977, 0.9978, 0.9979, 0.9979, 0.9980, 0.9981,
/* 2.90 */ 0.9981, 0.9982, 0.9982, 0.9983, 0.9984, 0.9984, 0.9985, 0.9985, 0.9986, 0.9986,
/* */
/* 3 00 */ 0.9987, 0.9987, 0.9987, 0.9988, 0.9988, 0.9989, 0.9989, 0.9989, 0.9990, 0.9990,
/* 3.10 */ 0.9990, 0.9991, 0.9991, 0.9991, 0.9992, 0.9992, 0.9992, 0.9992, 0.9993, 0.9993,
/* 3.20 */ 0.9993, 0.9993, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9995, 0.9995, 0.9995,
/* 3.30 */ 0.9995, 0.9995, 0.9995, 0.9996, 0.9996, 0.9996, 0.9996, 0.9996, 0.9996, 0.9997,
/* 3.40 */ 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9998,
/* 3.50 */ 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998,
/* 3.60 */ 0.9998, 0.9998, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
/* 3.70 */ 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
/* 3.80 */ 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
/* 3.90 */ 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000
]$
sdnv_G(u):=block(
    [_u],
    _u:round(u*100)+1,
    if _u > length(stnv_table) then return(1),
    if _u < 0 then return(1 - sdnv_G(-u)),
    return(stnv_table[_u])
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
nv_G(x, µ, sigma):=sdnv_G((x-µ)/sigma);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/*
Allgemeine Formel zum Summieren von n Rechtecken unter einer Funktion f(x)
Folgende Felder müssen definiert sein um zu einen Ergebnis zu kommen:
f(x)    Funktion
a       untere Schranke
b       obere Schranke
n       Anzahl der Rechtecke
*/
untersumme(f, a, b, n):=(b-a)/n * sum(subst(['x=a + (b-a)/n * i], f), i, 0, n-1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/*
Bereitstellen der ein zu setzenden Werte
f(x) --> Funktion welche integriert werden soll.
a, b --> Die beiden Schranken.
*/
kepler(f, a, b):=(b-a)/6*(subst(['x=a], f)+4*subst(['x=(a+b)/2], f)+subst(['x=b], f));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/*
Summieren von n Rechtecken welche zwischen a und b über der Funktion f liegen.
f(x)    Funktion
a       untere Schranke
b       obere Schranke
n       Anzahl der Rechtecke
*/
obersumme(f, a, b, n):= (b-a)/n * sum(subst(['x=a + (b-a)/n * i], f), i, 1, n);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/*
Simpson'sches Verfahren, Codeblock
Parameter:
f(x)    Funktion
n       Anzahl der Iterationen, wenn die Zahl höher ist wird das ergebnis genauer, die berechnung dauert aber länger.
a       Untere Schranke
b       Obere Schranke
*/
simpson(f,a,b,n):=(
    (b-a) / (3*n) * ( subst(['x=a], f) + subst(['x=b], f)
                     + 4 *
                           sum(subst(['x=a+(2*j-1)*((b-a)/n)], f),j,1,n/2)
                     + 2 *
                           sum(subst(['x=a+2*j*((b-a)/n)], f),j,1,n/2)
                    )
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
µ=250mm
sigma=0.15mm

a) liegt unterhalb 249.7mm (u-Verteilung, Untersumme)
b) liegt zwischen 249.8mm und 250.1mm (u-Verteilung, Kepler)
c) ist größer als 250.35mm (u-Verteilung, Obersumme)
d) mehr als .35mm Abweichung (u-Verteilung, Simpson)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
µ: 250;
sigma: 0.15;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
fu(x):=norm(x, µ, sigma);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxdraw2d(
explicit(fu(x), x, 249.5, 250.5));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
a) liegt unterhalb 249.7mm (u-Verteilung, Untersumme)

P(x < 249.7)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
nv_G(249.7, 250, 0.15);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
untersumme(fu(x), 0, 249.7, 200000), float;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
berechnung der Untersumme könnte etwas länger brauchen
ist aber ansonsten nicht genau genug um zu erkennen 
dass die beiden Ergebnise gleich sind
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
2.28 % der Wellen sind kürzer als 249.7mm.
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
b) liegt zwischen 249.8mm und 250.1mm (u-Verteilung, Kepler)

P(249.8 < x < 250.1)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
b_u0: (249.8-µ)/sigma;
b_u1: (250.1-µ)/sigma;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
b_G0: 1 - 0.9082;
b_G1: 0.7454;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
b_G1 - b_G0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kepler(fu(x), 249.8, 250.1), float;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
fast 2/3 der der Wellen liegen zwischen 249.8 & 250.1 mm.
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
c) ist größer als 250.35mm (u-Verteilung, Obersumme)

P(250.35 < x)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
c_u: (250.35-µ)/sigma;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
1 - nv_G(250.35, 250, 0.15);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
obersumme(fu(x), 250.35, 500, 200000), float;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
berechnung der obersumme könnte etwas länger brauchen
ist aber ansonsten nicht genau genug um zu erkennen 
dass die beiden Ergebnise gleich sind
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Fast 1% der Wellen sind länger als 250.35mm.
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]

   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
d) mehr als .35mm Abweichung (u-Verteilung, Simpson)

P(249.65 < x < 250.35)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
1 - (nv_G(250.35, 250, 0.15) - nv_G(249.65, 250, 0.15));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
1 - simpson(fu(x),249.65,250.35,1000), float;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Wahrscheindlichkeit einer Abweichung von mehr als 0.35mm
liegt bei knapp unter 2%
   [wxMaxima: comment end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
